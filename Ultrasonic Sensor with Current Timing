#include "NTPClient.h"
#include "ESP8266WiFi.h"
#include "WiFiUdp.h"

#define TRIGGER_PIN  5
#define ECHO_PIN     4
#define LED_PIN      14

const char *ssid = "check your hotspot and add your ssid";
const char *password = "same password here";

const long utcOffsetInSeconds = 19800;

char daysOfTheWeek[7][12] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};

// Define NTP Client to get time
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org", utcOffsetInSeconds);

void setup(){
  Serial.begin(115200);
  pinMode(TRIGGER_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  pinMode(LED_PIN, OUTPUT);
  WiFi.begin(ssid, password);
  while ( WiFi.status() != WL_CONNECTED ) {
    delay ( 500 );
    Serial.print ( "." );
  }
  timeClient.begin();
}

void loop() {
timeClient.update();
Serial.println("=================================");
Serial.print(timeClient.getHours());
Serial.println(" Hours");
if(timeClient.getHours() >= 22 && timeClient.getHours() <= 5){
  long duration, distance;
  digitalWrite(TRIGGER_PIN, LOW);  // Added this line
  delayMicroseconds(2); // Added this line
  digitalWrite(TRIGGER_PIN, HIGH);
  delayMicroseconds(10); // Added this line
  digitalWrite(TRIGGER_PIN, LOW);
  duration = pulseIn(ECHO_PIN, HIGH);
  distance = (duration/2) / 29.1;
  Serial.print(distance);
  Serial.println(" cm");
  if(distance > 180 && distance <500){
     digitalWrite(LED_PIN, HIGH);
  }
  else if(distance > 500 && distance <900){
     digitalWrite(LED_PIN, HIGH);
  }
  else if(distance < 155){
     digitalWrite(LED_PIN, HIGH);
  }
  else{
     digitalWrite(LED_PIN, LOW);
  }
  delay(350);
  Serial.println("=================================");
}
  
}
